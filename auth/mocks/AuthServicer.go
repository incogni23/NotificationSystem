// Code generated by mockery v2.42.2. DO NOT EDIT.

package mocks

import (
	auth "github.com/auth"
	mock "github.com/stretchr/testify/mock"
)

// AuthServicer is an autogenerated mock type for the AuthServicer type
type AuthServicer struct {
	mock.Mock
}

// SignUp provides a mock function with given fields: u
func (_m *AuthServicer) SignUp(u auth.User) error {
	ret := _m.Called(u)

	if len(ret) == 0 {
		panic("no return value specified for SignUp")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(auth.User) error); ok {
		r0 = rf(u)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewAuthServicer creates a new instance of AuthServicer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewAuthServicer(t interface {
	mock.TestingT
	Cleanup(func())
}) *AuthServicer {
	mock := &AuthServicer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
